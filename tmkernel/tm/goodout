

VARIABLES:
----
'12'
'12'
'GOOD!'
''
'
''
''
'$' '.' '"'
unknownvariable: 'bla bla bla'
'z y x z y x'
----
Special variables:
dollar: '$'
dot: '.'
double quote: '"'

COMMANDS:
---------

if:
----
if 1 done
----
if 0 not done
----
if "" done
----

insert:
----
var = `ladidah'

---- start of testsub ----
var = ladidah
var = 123
'testsub(10)'
'test.ds'

---- end of testsub ----
This line is not terminated, but should still appear in the output
var = `123'
----

include:
----
var = `ladidah'

---- start of testsub ----
var = ladidah
var = 123
'testsub(10)'
'test.ds'

---- end of testsub ----
This line is not terminated, but should still appear in the output
var = `ladidah'
----

redirect:
----
----

error:
----
----

foreach:
----
a
b
c
d
----
----

while:
----
1 2 3 4 5 6 7
2 3 4 5 6 7
3 4 5 6 7
4 5 6 7
5 6 7
6 7
7
----

FUNCTIONS:
----------

Comparison functions:
----
eq : '1' '0' '0'
neq: '0' '1' '1'
strcmp: '0' '-1' '1' '-1'
== : '1' '0' '0' '0'
!= : '0' '1' '1' '1'
<  : '1' '0' '0'
<= : '1' '1' '0'
>  : '0' '0' '1'
>= : '0' '1' '1'
----

Aritmetic functions:
----
+: '15' '3' '0'
-: '4' '-4' ''
*: '120' '3' '1'
/: '4' '3' '4' '0'
%: '0' '2' '1' '3'
max: '5' '3' '0'
min: '-1' '3' '0'
----

Boolean:
----
and: '1' '0' '1'
not: '0' '1' '0' '1'
or:  '0' '1' '0'
----

If
--
if 0: [false] [] []
if 1: [true] [true] []
[]

List manipulation:
----
index:   '1' '0' '0' '0'
member:  '1' '0' '0' '0'
shift:   'b c d e f' ''
first:   'a' ''
seplist: 'a, b, c, d, e, f' 'a' ''
prefix:  'pfx_a pfx_b pfx_c pfx_d pfx_e pfx_f' 'pfx_a' ''
suffix:  'a_sfx b_sfx c_sfx d_sfx e_sfx f_sfx' 'a_sfx' ''
len:     '6' '1' '0'
sort:    'a a b b c c d d e e f f' '-1 1 12 2' ''
uniq:    'a b c d e f' '-1 1 12 2' ''
rev:     'f e d c b a' ''
----

Regular expressions:
----
funtion: subs
* [&]: [[foobar] [fobar] [foo] [bar] [blabar] [a] [b] [barf] [foofoo] [barbar] [ian]]
foo* 1: [1 fobar 1 bar blabar a b barf 1 barbar ian]
foo* &&: [foobarfoobar fobar foofoo bar blabar a b barf foofoofoofoo barbar ian]
(foo)* &\1: [foobarfoo fobar foofoo bar blabar a b barf foofoofoo barbar ian]
(foo)(*) \2\1: [barfoo fobar foo bar blabar a b barf foofoo barbar ian]
[a-e]* !&: [foobar fobar foo !bar !blabar !a !b !barf foofoo !barbar ian]
(?)(*)(?) \3\2\1: [roobaf robaf oof rab rlabab a b farb ooofof rarbab nai]

funtion: filt
* [&]: [[foobar] [fobar] [foo] [bar] [blabar] [a] [b] [barf] [foofoo] [barbar] [ian]]
foo* 1: [1 1 1]
foo* &&: [foobarfoobar foofoo foofoofoofoo]
(foo)* &\1: [foobarfoo foofoo foofoofoo]
(foo)(*) \2\1: [barfoo foo foofoo]
[a-e]* !&: [!bar !blabar !a !b !barf !barbar]
(?)(*)(?) \3\2\1: [roobaf robaf oof rab rlabab farb ooofof rarbab nai]

funtion: rmlist
foo*: [fobar bar blabar a b barf barbar ian]
foo*: [fobar bar blabar a b barf barbar ian]
(foo)*: [fobar bar blabar a b barf barbar ian]
foo(*): [fobar bar blabar a b barf barbar ian]
(foo)(*): [fobar bar blabar a b barf barbar ian]
[a-e]*: [foobar fobar foo foofoo ian]
(?)(*)(?): [a b]
----

Filename access functions:
----
dsfilename: 'test.ds'
tplfilename: 'testin'
tpllineno: '190'
1 bla
testsub
----
Datastructure access functions:

mklist: test a test a test a  
stemname: a b] [c [d] [e]] a[f] [[g]]
mklist: test a [test [a [[[[[test [[[[[a  
stemname: a b] c d] e]] a[f] g]]
mklist: test a [test] [a] [[[[[test]]]]] [[[[[a]]]]]  
stemname: a b] [c d e] a[f] g
mklist: test a test] a] test]]]]] a]]]]]  
stemname: a b [c [d [e a[f [[g
inherits:  
inheritors:  
superclasses:  
subclasses:  
conslist:   
fields:   
Mode `':
=-=-=-=
typelist: 'orig subtuple sublevel notuple toplevel thing subclass testclass'
tuplelist: 'orig subtuple notuple'
ctypelist: 'sublevel toplevel thing'
classlist: 'subclass testclass'
    conslist orig: ''
    inherits orig: ''
    inheritors orig: 'subtuple subclass'
    superclasses orig: ''
    subclasses orig: 'subtuple subclass notuple toplevel sublevel'
    isvirtual orig: '0'
    fields orig : 'file line'
	ttypeclass orig file: 'single'
	typelevel orig file: 0
	typename orig file: 'string'
	type orig file: 'string'
	ttypeclass orig line: 'single'
	typelevel orig line: 0
	typename orig line: 'int'
	type orig line: 'int'
    conslist subtuple: ''
    inherits subtuple: 'orig'
    inheritors subtuple: 'notuple toplevel'
    superclasses subtuple: 'orig'
    subclasses subtuple: 'notuple toplevel sublevel'
    isvirtual subtuple: '0'
    fields subtuple : 'tl tn'
	ttypeclass subtuple tl: 'list'
	typelevel subtuple tl: 1
	typename subtuple tl: 'thing'
	type subtuple tl: 'thing_list'
	ttypeclass subtuple tn: 'single'
	typelevel subtuple tn: 0
	typename subtuple tn: 'int'
	type subtuple tn: 'int'
    conslist sublevel: 'SubNamed subNamedlist SubNamedlistlist'
    inherits sublevel: 'toplevel'
    inheritors sublevel: ''
    superclasses sublevel: 'orig subtuple toplevel'
    subclasses sublevel: ''
    isvirtual sublevel: '0'
        celmlist: 'n'
        fields : ''
            ctypeclass sublevel SubNamed n: 'single'
	    ctypellev sublevel SubNamed n: 0
            ctypename sublevel SubNamed n: 'int'
	    ttypeclass SubNamed n: ''
	    typelevel SubNamed n: 
	    typename SubNamed n: ''
	    type SubNamed n: ''
        celmlist: 'thinglist'
        fields : ''
            ctypeclass sublevel subNamedlist thinglist: 'list'
	    ctypellev sublevel subNamedlist thinglist: 1
            ctypename sublevel subNamedlist thinglist: 'thing'
	    ttypeclass subNamedlist thinglist: ''
	    typelevel subNamedlist thinglist: 
	    typename subNamedlist thinglist: ''
	    type subNamedlist thinglist: ''
        celmlist: 'thinglistlist'
        fields : ''
            ctypeclass sublevel SubNamedlistlist thinglistlist: 'list'
	    ctypellev sublevel SubNamedlistlist thinglistlist: 2
            ctypename sublevel SubNamedlistlist thinglistlist: 'thing'
	    ttypeclass SubNamedlistlist thinglistlist: ''
	    typelevel SubNamedlistlist thinglistlist: 
	    typename SubNamedlistlist thinglistlist: ''
	    type SubNamedlistlist thinglistlist: ''
    fields sublevel : ''
    conslist notuple: ''
    inherits notuple: 'subtuple'
    inheritors notuple: ''
    superclasses notuple: 'orig subtuple'
    subclasses notuple: ''
    isvirtual notuple: '0'
    fields notuple : ''
    conslist toplevel: 'Top Toptuple TopNone'
    inherits toplevel: 'subtuple'
    inheritors toplevel: 'sublevel'
    superclasses toplevel: 'orig subtuple'
    subclasses toplevel: 'sublevel'
    isvirtual toplevel: '0'
        celmlist: 'la lb'
        fields : ''
            ctypeclass toplevel Top la: 'list'
	    ctypellev toplevel Top la: 1
            ctypename toplevel Top la: 'sublevel'
	    ttypeclass Top la: ''
	    typelevel Top la: 
	    typename Top la: ''
	    type Top la: ''
            ctypeclass toplevel Top lb: 'list'
	    ctypellev toplevel Top lb: 2
            ctypename toplevel Top lb: 'sublevel'
	    ttypeclass Top lb: ''
	    typelevel Top lb: 
	    typename Top lb: ''
	    type Top lb: ''
        celmlist: 'tup'
        fields : ''
            ctypeclass toplevel Toptuple tup: 'single'
	    ctypellev toplevel Toptuple tup: 0
            ctypename toplevel Toptuple tup: 'subtuple'
	    ttypeclass Toptuple tup: ''
	    typelevel Toptuple tup: 
	    typename Toptuple tup: ''
	    type Toptuple tup: ''
        celmlist: ''
        fields : ''
    fields toplevel : ''
    conslist thing: 'Thing'
    inherits thing: ''
    inheritors thing: ''
    superclasses thing: ''
    subclasses thing: ''
    isvirtual thing: '0'
        celmlist: ''
        fields : ''
    fields thing : ''
    conslist subclass: ''
    inherits subclass: 'testclass orig'
    inheritors subclass: ''
    superclasses subclass: 'testclass orig'
    subclasses subclass: ''
    isvirtual subclass: '0'
    fields subclass : ''
    conslist testclass: ''
    inherits testclass: ''
    inheritors testclass: 'subclass'
    superclasses testclass: ''
    subclasses testclass: 'subclass'
    isvirtual testclass: '0'
    fields testclass : 'a b'
	ttypeclass testclass a: 'list'
	typelevel testclass a: 2
	typename testclass a: 'int'
	type testclass a: 'int_list_list'
	ttypeclass testclass b: 'single'
	typelevel testclass b: 0
	typename testclass b: 'int'
	type testclass b: 'int'
----

Datastructure dependency
----
single types dependent on orig: 'orig'
list types dependent on orig: ''
single types dependent on subtuple: 'subtuple thing'
list types dependent on subtuple: 'thing'
single types dependent on sublevel: 'sublevel thing'
list types dependent on sublevel: 'thing thing_list'
single types dependent on notuple: 'notuple'
list types dependent on notuple: ''
single types dependent on toplevel: 'subtuple sublevel toplevel thing'
list types dependent on toplevel: 'sublevel sublevel_list thing thing_list'
single types dependent on thing: 'thing'
list types dependent on thing: ''
single types dependent on subclass: 'subclass'
list types dependent on subclass: ''
single types dependent on testclass: 'testclass'
list types dependent on testclass: ''
Testing error handling:
''
''
''
Type sorting:
depsort: [int orig subtuple sublevel notuple toplevel thing subclass testclass]
----
Mode `inherited':
=-=-=-=
typelist: 'orig subtuple sublevel notuple toplevel thing subclass testclass'
tuplelist: 'orig subtuple notuple'
ctypelist: 'sublevel toplevel thing'
classlist: 'subclass testclass'
    conslist orig: ''
    inherits orig: ''
    inheritors orig: 'subtuple subclass'
    superclasses orig: ''
    subclasses orig: 'subtuple subclass notuple toplevel sublevel'
    isvirtual orig: '0'
    fields orig inherited: 'file line'
	ttypeclass orig file: 'single'
	typelevel orig file: 0
	typename orig file: 'string'
	type orig file: 'string'
	ttypeclass orig line: 'single'
	typelevel orig line: 0
	typename orig line: 'int'
	type orig line: 'int'
    conslist subtuple: ''
    inherits subtuple: 'orig'
    inheritors subtuple: 'notuple toplevel'
    superclasses subtuple: 'orig'
    subclasses subtuple: 'notuple toplevel sublevel'
    isvirtual subtuple: '0'
    fields subtuple inherited: 'file line tl tn'
	ttypeclass subtuple file: 'single'
	typelevel subtuple file: 0
	typename subtuple file: 'string'
	type subtuple file: 'string'
	ttypeclass subtuple line: 'single'
	typelevel subtuple line: 0
	typename subtuple line: 'int'
	type subtuple line: 'int'
	ttypeclass subtuple tl: 'list'
	typelevel subtuple tl: 1
	typename subtuple tl: 'thing'
	type subtuple tl: 'thing_list'
	ttypeclass subtuple tn: 'single'
	typelevel subtuple tn: 0
	typename subtuple tn: 'int'
	type subtuple tn: 'int'
    conslist sublevel: 'SubNamed subNamedlist SubNamedlistlist'
    inherits sublevel: 'toplevel'
    inheritors sublevel: ''
    superclasses sublevel: 'orig subtuple toplevel'
    subclasses sublevel: ''
    isvirtual sublevel: '0'
        celmlist: 'n'
        fields inherited: ''
            ctypeclass sublevel SubNamed n: 'single'
	    ctypellev sublevel SubNamed n: 0
            ctypename sublevel SubNamed n: 'int'
	    ttypeclass SubNamed n: ''
	    typelevel SubNamed n: 
	    typename SubNamed n: ''
	    type SubNamed n: ''
        celmlist: 'thinglist'
        fields inherited: ''
            ctypeclass sublevel subNamedlist thinglist: 'list'
	    ctypellev sublevel subNamedlist thinglist: 1
            ctypename sublevel subNamedlist thinglist: 'thing'
	    ttypeclass subNamedlist thinglist: ''
	    typelevel subNamedlist thinglist: 
	    typename subNamedlist thinglist: ''
	    type subNamedlist thinglist: ''
        celmlist: 'thinglistlist'
        fields inherited: ''
            ctypeclass sublevel SubNamedlistlist thinglistlist: 'list'
	    ctypellev sublevel SubNamedlistlist thinglistlist: 2
            ctypename sublevel SubNamedlistlist thinglistlist: 'thing'
	    ttypeclass SubNamedlistlist thinglistlist: ''
	    typelevel SubNamedlistlist thinglistlist: 
	    typename SubNamedlistlist thinglistlist: ''
	    type SubNamedlistlist thinglistlist: ''
    fields sublevel inherited: 'file line tl tn'
	ttypeclass sublevel file: 'single'
	typelevel sublevel file: 0
	typename sublevel file: 'string'
	type sublevel file: 'string'
	ttypeclass sublevel line: 'single'
	typelevel sublevel line: 0
	typename sublevel line: 'int'
	type sublevel line: 'int'
	ttypeclass sublevel tl: 'list'
	typelevel sublevel tl: 1
	typename sublevel tl: 'thing'
	type sublevel tl: 'thing_list'
	ttypeclass sublevel tn: 'single'
	typelevel sublevel tn: 0
	typename sublevel tn: 'int'
	type sublevel tn: 'int'
    conslist notuple: ''
    inherits notuple: 'subtuple'
    inheritors notuple: ''
    superclasses notuple: 'orig subtuple'
    subclasses notuple: ''
    isvirtual notuple: '0'
    fields notuple inherited: 'file line tl tn'
	ttypeclass notuple file: 'single'
	typelevel notuple file: 0
	typename notuple file: 'string'
	type notuple file: 'string'
	ttypeclass notuple line: 'single'
	typelevel notuple line: 0
	typename notuple line: 'int'
	type notuple line: 'int'
	ttypeclass notuple tl: 'list'
	typelevel notuple tl: 1
	typename notuple tl: 'thing'
	type notuple tl: 'thing_list'
	ttypeclass notuple tn: 'single'
	typelevel notuple tn: 0
	typename notuple tn: 'int'
	type notuple tn: 'int'
    conslist toplevel: 'Top Toptuple TopNone'
    inherits toplevel: 'subtuple'
    inheritors toplevel: 'sublevel'
    superclasses toplevel: 'orig subtuple'
    subclasses toplevel: 'sublevel'
    isvirtual toplevel: '0'
        celmlist: 'la lb'
        fields inherited: ''
            ctypeclass toplevel Top la: 'list'
	    ctypellev toplevel Top la: 1
            ctypename toplevel Top la: 'sublevel'
	    ttypeclass Top la: ''
	    typelevel Top la: 
	    typename Top la: ''
	    type Top la: ''
            ctypeclass toplevel Top lb: 'list'
	    ctypellev toplevel Top lb: 2
            ctypename toplevel Top lb: 'sublevel'
	    ttypeclass Top lb: ''
	    typelevel Top lb: 
	    typename Top lb: ''
	    type Top lb: ''
        celmlist: 'tup'
        fields inherited: ''
            ctypeclass toplevel Toptuple tup: 'single'
	    ctypellev toplevel Toptuple tup: 0
            ctypename toplevel Toptuple tup: 'subtuple'
	    ttypeclass Toptuple tup: ''
	    typelevel Toptuple tup: 
	    typename Toptuple tup: ''
	    type Toptuple tup: ''
        celmlist: ''
        fields inherited: ''
    fields toplevel inherited: 'file line tl tn'
	ttypeclass toplevel file: 'single'
	typelevel toplevel file: 0
	typename toplevel file: 'string'
	type toplevel file: 'string'
	ttypeclass toplevel line: 'single'
	typelevel toplevel line: 0
	typename toplevel line: 'int'
	type toplevel line: 'int'
	ttypeclass toplevel tl: 'list'
	typelevel toplevel tl: 1
	typename toplevel tl: 'thing'
	type toplevel tl: 'thing_list'
	ttypeclass toplevel tn: 'single'
	typelevel toplevel tn: 0
	typename toplevel tn: 'int'
	type toplevel tn: 'int'
    conslist thing: 'Thing'
    inherits thing: ''
    inheritors thing: ''
    superclasses thing: ''
    subclasses thing: ''
    isvirtual thing: '0'
        celmlist: ''
        fields inherited: ''
    fields thing inherited: ''
    conslist subclass: ''
    inherits subclass: 'testclass orig'
    inheritors subclass: ''
    superclasses subclass: 'testclass orig'
    subclasses subclass: ''
    isvirtual subclass: '0'
    fields subclass inherited: 'a b file line'
	ttypeclass subclass a: 'list'
	typelevel subclass a: 2
	typename subclass a: 'int'
	type subclass a: 'int_list_list'
	ttypeclass subclass b: 'single'
	typelevel subclass b: 0
	typename subclass b: 'int'
	type subclass b: 'int'
	ttypeclass subclass file: 'single'
	typelevel subclass file: 0
	typename subclass file: 'string'
	type subclass file: 'string'
	ttypeclass subclass line: 'single'
	typelevel subclass line: 0
	typename subclass line: 'int'
	type subclass line: 'int'
    conslist testclass: ''
    inherits testclass: ''
    inheritors testclass: 'subclass'
    superclasses testclass: ''
    subclasses testclass: 'subclass'
    isvirtual testclass: '0'
    fields testclass inherited: 'a b'
	ttypeclass testclass a: 'list'
	typelevel testclass a: 2
	typename testclass a: 'int'
	type testclass a: 'int_list_list'
	ttypeclass testclass b: 'single'
	typelevel testclass b: 0
	typename testclass b: 'int'
	type testclass b: 'int'
----

Datastructure dependency
----
single types dependent on orig: 'orig'
list types dependent on orig: ''
single types dependent on subtuple: 'subtuple thing'
list types dependent on subtuple: 'thing'
single types dependent on sublevel: 'sublevel thing'
list types dependent on sublevel: 'thing thing_list'
single types dependent on notuple: 'notuple'
list types dependent on notuple: ''
single types dependent on toplevel: 'subtuple sublevel toplevel thing'
list types dependent on toplevel: 'sublevel sublevel_list thing thing_list'
single types dependent on thing: 'thing'
list types dependent on thing: ''
single types dependent on subclass: 'subclass'
list types dependent on subclass: ''
single types dependent on testclass: 'testclass'
list types dependent on testclass: ''
Testing error handling:
''
''
''
Type sorting:
depsort: [int orig subtuple sublevel notuple toplevel thing subclass testclass]
----

String manipulation functions:
----
strpad: 'bla   ' 'abc' 'blawowwowwo'
strpad: '00000' ''
strlen: '6' '0' '0'
strindex: '3' '0'
toupper: 'BLA' 'BLA BLA BLA' ''
tolower: 'bla' 'bla bla bla' ''
capitalize: 'Bla' 'BLA Bla Bla' ''
----

Miscellaneous functions:
----
1 0 0
isinenv: [0] [1] [0]
----

verbose flag and other command line settings:
----
verbose = ''
test1 = ''
test2 = 'a'
----

comm:
----
'a e a e'
''
''
''
----

excl:
----
'b c d f b c d f'
''
'a b c d'
''
----


Integer expressions
-------------------

'-12' '12'
'0' '28'
'313' '5040' '1' '3'
<: '1' '0' '1' '0' '0'
<=: '1' '0' '1' '0' '1'
>: '0' '1' '0' '1' '0'
>=: '0' '1' '0' '1' '1'
!=: '1' '1' '1' '1' '0'
==: '0' '0' '0' '0' '1'
 |
-------
0 0 | 0
0 1 | 1
1 0 | 1
1 1 | 1

 &
-------
0 0 | 0
0 1 | 0
1 0 | 0
1 1 | 1

 ==
-------
0 0 | 1
0 1 | 0
1 0 | 0
1 1 | 1

 !=
-------
0 0 | 0
0 1 | 1
1 0 | 1
1 1 | 0

 <
-------
0 0 | 0
0 1 | 1
1 0 | 0
1 1 | 0

 <=
-------
0 0 | 1
0 1 | 1
1 0 | 0
1 1 | 1

 >=
-------
0 0 | 1
0 1 | 0
1 0 | 1
1 1 | 1

 >
-------
0 0 | 0
0 1 | 0
1 0 | 1
1 1 | 0

12
'0' '12' '
'0' '0' '0'

Buffer size test.
Create a list with 2k worth elements.
2
4
8
16
32
64
128
256

Macros
------
v:[toplevelv]
[Start macro]
a:[12]
b:[34]
v:[12 34]
[end macro]
v:[toplevelv]
[Start macro]
a:[a]
b:[b]
v:[a b]
[end macro]
v:[toplevelv]
[Start macro]
a:[1 2 3 4 5 6 7]
b:[a b c d e]
v:[1 2 3 4 5 6 7 a b c d e]
[end macro]
v:[toplevelv]
v:[toplevelv]
[Start new macro]
a:[12] (done by macro 'submacro')
b:[34] (done by macro 'submacro')
v:[12 34] (done by macro 'submacro')
[end new macro]
v:[toplevelv]
[Start new macro]
a:[a] (done by macro 'submacro')
b:[b] (done by macro 'submacro')
v:[a b] (done by macro 'submacro')
[end new macro]
v:[toplevelv]
[Start new macro]
a:[1 2 3 4 5 6 7] (done by macro 'submacro')
b:[a b c d e] (done by macro 'submacro')
v:[1 2 3 4 5 6 7 a b c d e] (done by macro 'submacro')
[end new macro]
v:[toplevelv]
[-1 -9 1 1 12 2 2343 3 4 4 5]
  
[]
[]
----

Eval
----
[$[1+2]] [3]
----
