# Tm - an interface code generator.
# Author: C. van Reeuwijk.
#
# All rights reserved.
#
# To customize this Makefile, run configure.
#
# Compilation for Atari ST with Pure C is done with a separate project
# file 'tmc.prj'.
# Compilation for MSDOS/MS-Windows with Borland C is done with a
# makefile. See the file 'README' for details.
 
CC = @CC@
LINKER = $(CC)
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
LOCALBIN = @prefix@/bin
LOCALLIB = @prefix@/lib
LOCALINCLUDE = @prefix@/include
LOCALMAN = @prefix@/man
TMPFILE = @prefix@/tmp4242

# System dependent flags for compilation with debugging
DBUGFLAGS = -g -DLOGNEW -DSTAT

LDFLAGS	= $(DBUGFLAGS)

# C compilation flags
CFLAGS = @CFLAGS@ $(DBUGFLAGS) -I../libtmc -I$(LOCALINCLUDE)

# Some names of programs
TM  = ../tm/tm

#TMCLIB = $(LOCALLIB)/libtmc.a
TMCLIB = ../libtmc/libtmc.a

LIBS = @LIBS@ $(TMCLIB)

MAKEFILE = Makefile

DOC = README

JUNK = tmp core makelog testerr testout alutest llutest config.log \
       gmon.out log alutest.c llutest.c dist.lst distlist tmctest.c \
       alutest.c llutest.c tmctest tmcwalktest aldtest

TESTFILES = \
    cltest.ds test.ds xxtest.c \
    tmcokerr tmcokout tmctesti tmcspec.t tmccode.ct tmccode.ht \
    aluokerr aluokout alutesti aluspec.t alucode.ct alucode.ht \
    lluokerr lluokout llutesti lluspec.t llucode.ct llucode.ht \
    tmcwalktest.ct tmcwalkin tmcwalkok

FOREIGNFILES = alutos.prj llutos.prj makefile.tc config.htc \
         	makefile.tos config.hts

# Files for configuration
CONFIGUREFILES = configure config.hin Makefile.in configure.in

DISTFILES = $(TMMODULES) $(TESTFILES) $(DOC) $(FOREIGNFILES) \
	    $(CONFIGUREFILES)

TMMODULES     = tmc.ct tmc.ht \
		calu.ct calu.ht \
                cllu.ct cllu.ht \
                need.t tmcwalk.t \
		macros.t tmcid.t aluid.t lluid.t

LLUTMSRCS     = llucode.c 

LLUTMHDRS     = llucode.h

TMCTMHDRS      = tmccode.h

TMCTMSRCS      = tmccode.c

ALUTMHDRS      = alucode.h

ALUTMSRCS      = alucode.c

LLUTESTSRCS   = llutest.c llucode.c
LLUTESTHDRS   = llucode.h
LLUTESTOBJS   = llutest.o llucode.o

TMCTESTSRCS   = tmctest.c tmccode.c
TMCTESTHDRS   = tmccode.h
TMCTESTOBJS   = tmctest.o tmccode.o

TMCWALKTESTSRCS = tmcwalktest.c tmccode.c
TMCWALKTESTOBJS = $(TMCWALKTESTSRCS:.c=.o)

ALUTESTSRCS   = alutest.c alucode.c
ALUTESTHDRS   = alucode.h
ALUTESTOBJS   = alutest.o alucode.o

OBJS = $(TMCWALKTESTOBJS) tmccode.o alutest.o alucode.o alutest.o llucode.o \
 llutest.o tmctest.o

# These sources are generated from tm templates.
TMOUT = tmccode.c tmccode.h alucode.c alucode.h llucode.c llucode.h \
 tmcwalktest.c

help :
	@echo " Possible make targets:"
	@echo "all		Create local running programs."
	@echo "clean		Free disk space."
	@echo "empty		Free disk space."
	@echo "distfiles	List distribution files."
	@echo "install		Install relevant files."
	@echo "check		Run tests."

#
all: tmctest llutest alutest tmcwalktest

# Add rules for the programs themselves here.

test: tmctestrun llutestrun alutestrun tmcwalktestrun

check: tmctestrun llutestrun alutestrun tmcwalktestrun

tmcwalktest: $(TMCWALKTESTOBJS)
	$(LINKER) $(LDFLAGS) $(TMCWALKTESTOBJS) $(LIBS) -o tmcwalktest

tmcwalktestrun: tmcwalktest tmcwalkin tmcwalkok
	./tmcwalktest
	diff testout tmcwalkok

tmctest: $(TMCTESTOBJS)
	$(LINKER) $(LDFLAGS) $(TMCTESTOBJS) $(LIBS) -o tmctest

tmctestrun: tmctest tmctesti tmcokout tmcokerr
	./tmctest
	diff testout tmcokout
	diff testerr tmcokerr

tmcinstall: need.t tmc.ct tmc.ht tmcid.t tmcwalk.t
	-$(INSTALL) -d $(LOCALLIB)
	cat macros.t tmcid.t need.t tmc.ct > $(TMPFILE)
	$(INSTALL_DATA) $(TMPFILE) $(LOCALLIB)/tmc.ct
	cat macros.t tmcid.t need.t tmc.ht > $(TMPFILE)
	$(INSTALL_DATA) $(TMPFILE) $(LOCALLIB)/tmc.ht
	rm -f $(TMPFILE)
	$(INSTALL_DATA) tmcwalk.t $(LOCALLIB)/tmcwalk.t

alutest: $(ALUTESTOBJS)
	$(LINKER) $(LDFLAGS) $(ALUTESTOBJS) $(LIBS) -o alutest

alutestrun: alutest alutesti aluokout aluokerr
	./alutest
	diff testout aluokout
	diff testerr aluokerr

aluinstall: need.t calu.ct calu.ht aluid.t
	-$(INSTALL) -d $(LOCALLIB)
	cat macros.t aluid.t need.t calu.ct > $(TMPFILE)
	$(INSTALL_DATA) $(TMPFILE) $(LOCALLIB)/calu.ct
	cat macros.t aluid.t need.t calu.ht > $(TMPFILE)
	$(INSTALL_DATA) $(TMPFILE) $(LOCALLIB)/calu.ht
	rm -f $(TMPFILE)

llutest:     $(LLUTESTOBJS)
	$(LINKER) $(LDFLAGS) $(LLUTESTOBJS) $(LIBS) -o llutest

llutestrun: llutest llutesti
	./llutest
	diff testout lluokout
	diff testerr lluokerr

lluinstall: need.t cllu.ct cllu.ht lluid.t
	-$(INSTALL) -d $(LOCALLIB)
	cat macros.t lluid.t need.t cllu.ct > $(TMPFILE)
	$(INSTALL_DATA) $(TMPFILE) $(LOCALLIB)/cllu.ct
	cat macros.t lluid.t need.t cllu.ht > $(TMPFILE)
	$(INSTALL_DATA) $(TMPFILE) $(LOCALLIB)/cllu.ht
	rm -f $(TMPFILE)

install: tmcinstall lluinstall aluinstall

clean:
	rm -f $(JUNK) $(OBJS) $(TMOUT)

distclean:
	rm -f $(JUNK) $(OBJS) $(TMOUT) config.cache config.status config.h

empty:
	rm -f $(JUNK) $(OBJS) $(TMOUT) config.cache config.status config.h

distfiles:
	@echo $(DISTFILES) | tr ' ' '\012'

distlist: $(DISTFILES)
	echo $(DISTFILES) | tr ' ' '\012' > dist.lst

depend: $(TMCTMHDRS) $(TMCTMSRCS) $(LLUTMSRCS) $(LLUTMHDRS) $(ALUTMHDRS) $(ALUTMSRCS)
	mkmf -I$(LOCALINCLUDE) -f $(MAKEFILE)

tmcwalktest.c: tmcwalktest.ct cltest.ds tmcwalk.t
	$(TM) cltest.ds tmcwalktest.ct > tmcwalktest.c

tmccode.c: tmccode.ct tmc.ct tmcspec.t cltest.ds need.t macros.t tmcid.t
	$(TM) cltest.ds tmccode.ct > tmccode.c

tmccode.h: tmccode.ht tmc.ht tmcspec.t cltest.ds need.t macros.t tmcid.t
	$(TM) cltest.ds tmccode.ht > tmccode.h

alucode.c: alucode.ct calu.ct aluspec.t test.ds need.t macros.t aluid.t
	$(TM) test.ds alucode.ct > alucode.c

alucode.h: alucode.ht calu.ht aluspec.t test.ds need.t macros.t aluid.t
	$(TM) test.ds alucode.ht > alucode.h

llucode.c : llucode.ct cllu.ct lluspec.t test.ds need.t macros.t lluid.t
	$(TM) test.ds llucode.ct > llucode.c

llucode.h : llucode.ht cllu.ht lluspec.t test.ds need.t macros.t lluid.t
	$(TM) test.ds llucode.ht > llucode.h

tmctest.c: xxtest.c
	sed -e 's/XXX/tmc/' xxtest.c > tmctest.c

alutest.c: xxtest.c
	sed -e 's/XXX/alu/' xxtest.c > alutest.c

llutest.c: xxtest.c
	sed -e 's/XXX/llu/' xxtest.c > llutest.c

stats:
	wc -l $(TMMODULES)

###
tmccode.o: tmccode.h config.h
tmctest.o: tmccode.h config.h
alucode.o: alucode.h config.h
alutest.o: alucode.h config.h
llucode.o: llucode.h config.h
llutest.o: llucode.h config.h
tmcwalktest.o: tmccode.h config.h
