# Tm - an interface code generator.
# Author: C. van Reeuwijk.
#
# All rights reserved.
#
# This version is specific for Borland C++ for Windows.
# It is tested on Borland C++ version 4.52; it *might* work with earlier
# versions.
#
# A few variables can be defined below to change the configuration

# You can customize this Makefile for your system by editing
# the variables immediately below. The current values are not magical;
# they just reflect what I use.
#  LOCALBIN	The place to put binaries
#  LOCALLIB	The place to get libraries and templates
#  LOCALINC	The place to get local include (.h) files
#  CC		The compiler to use: BCC32 if possible, else BCC. 
#  SYSCFLAGS	Compilation flags to use. You may want to change them
#		to choose target machine architecture, optimization level,
#		memory model, etc.
#  PROGBASE	The basename of the resulting program. If you want to generate
#		both the 16 bits and the 32 bits version, you
#		may want a name with '32' in it for one of them.
# 
LOCALBIN = c:\bin
LOCALLIB=e:\lib
LOCALINC=e:\include
CC = BCC32
LINKER = $(CC)
SYSCFLAGS = -wall -wstu -4 -O2 -DLOGNEW -DSTAT

LDFLAGS	      = $(SYSCFLAGS)

# C compilation flags
CFLAGS = $(SYSCFLAGS) -I$(LOCALINC)

# Some names of programs
TM  = tm.exe

TMCLIB = $(LOCALLIB)\tmc32.lib

LIBS = $(TMCLIB)

MAKEFILE = Makefile

DOC	= README

DEMOFILES =

LLUTESTSRCS = llutest.c llucode.c
LLUTESTOBJS = $(LLUTESTSRCS:.c=.obj)

ALUTESTSRCS   = alutest.c alucode.c
ALUTESTOBJS = $(ALUTESTSRCS:.c=.obj)

ALDTESTSRCS   = aldtest.c aldcode.c
ALDTESTOBJS = $(ALDTESTSRCS:.c=.obj)

help :
	@echo " Possible make targets:"
	@echo "all		Create local running programs."
	@echo "clean		Delete all intermediate files."
	@echo "empty		Delete all files that can be re-generated."
	@echo "install		Install relevant files."
	@echo "test		Run tests."

#
all: llutest.exe alutest.exe aldtest.exe

# Add rules for the programs themselves here.

test : llutestrun alutestrun aldtestrun

alutest.exe: $(ALUTESTOBJS)
	$(LINKER) -ealutest $(LDFLAGS) $(ALUTESTOBJS) $(LIBS)

alutestrun: alutest.exe alutesti
	alutest.exe
	diff testout aluokout
	diff testerr aluokerr

aluinstall: aluneed.t calu.ct calu.ht
	copy /a macros.t+aluneed.t+calu.ct $(LOCALLIB)\calu.ct
	copy /a macros.t+aluneed.t+calu.ht $(LOCALLIB)\calu.ht

aldtest.exe: $(ALDTESTOBJS)
	$(LINKER) -ealdtest $(LDFLAGS) $(ALDTESTOBJS) $(LIBS)

aldtestrun: aldtest.exe aldtesti
	aldtest.exe
	diff testout aldokout
	diff testerr aldokerr

aldinstall: aldneed.t cald.ct cald.ht
	copy /a macros.t+aldneed.t+cald.ct $(LOCALLIB)\cald.ct
	copy /a macros.t+aldneed.t+cald.ht $(LOCALLIB)\cald.ht

llutest.exe: $(LLUTESTOBJS)
	$(LINKER) -ellutest $(LDFLAGS) $(LLUTESTOBJS) $(LIBS)

llutestrun: llutest.exe llutesti
	llutest.exe
	diff testout lluokout
	diff testerr lluokerr

lluinstall : lluneed.t cllu.ct cllu.ht
	copy /a macros.t+lluneed.t+cllu.ct $(LOCALLIB)\cllu.ct
	copy /a macros.t+lluneed.t+cllu.ht $(LOCALLIB)\cllu.ht

install: lluinstall aluinstall aldinstall

clean:
	del *.obj
	del testout
	del testerr
	del llutest.exe
	del llutest.c
	del aldtest.exe
	del aldtest.c
	del alutest.exe
	del alutest.c
	del llucode.h
	del alucode.h
	del aldcode.h
	del llucode.c
	del alucode.c
	del aldcode.c

empty:
	del *.obj
	del testout
	del testerr
	del llutest.exe
	del llutest.c
	del aldtest.exe
	del aldtest.c
	del alutest.exe
	del alutest.c
	del llucode.h
	del alucode.h
	del aldcode.h
	del llucode.c
	del alucode.c
	del aldcode.c

alucode.c: alucode.ct calu.ct aluspec.t test.ds aluneed.t macros.t
	$(TM) test.ds alucode.ct > alucode.c

alucode.h: alucode.ht calu.ht aluspec.t test.ds aluneed.t macros.t
	$(TM) test.ds alucode.ht > alucode.h

aldcode.c: aldcode.ct cald.ct aldspec.t test.ds aldneed.t macros.t
	$(TM) test.ds aldcode.ct > aldcode.c

aldcode.h: aldcode.ht cald.ht aldspec.t test.ds aldneed.t macros.t
	$(TM) test.ds aldcode.ht > aldcode.h

llucode.c: llucode.ct cllu.ct lluspec.t test.ds lluneed.t macros.t
	$(TM) test.ds llucode.ct > llucode.c

llucode.h: llucode.ht cllu.ht lluspec.t test.ds lluneed.t macros.t
	$(TM) test.ds llucode.ht > llucode.h

alutest.c: xxtest.c
	sed -e 's/XXX/alu/' xxtest.c > alutest.c

aldtest.c: xxtest.c
	sed -e 's/XXX/ald/' xxtest.c > aldtest.c

llutest.c: xxtest.c
	sed -e 's/XXX/llu/' xxtest.c > llutest.c

.c.obj:
	$(CC) -c $(CFLAGS) -o$* $<

###
alucode.obj: alucode.h config.h
alutest.obj: alucode.h config.h
aldcode.obj: aldcode.h config.h
aldtest.obj: aldcode.h config.h
llucode.obj: llucode.h config.h
llutest.obj: llucode.h config.h
