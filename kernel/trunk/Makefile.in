# Makefile for the root of the Tm distribution

SHELL=/bin/sh
MAKEFILE = Makefile

# The Tm directories that may require compilation, testing or installation
DIRLIST=libtmc tm tmc
DOCDIRLIST=$(DIRLIST) manual
CONFIGUREFILES = Makefile.in configure configure.in install-sh config.bat autoconfall
DISTFILES = $(CONFIGUREFILES) README CHANGES gpl.txt lgpl.txt version.h
JUNK = dist.lst

help:
	@echo "possible targets:"
	@echo "all      Compile all sources."
	@echo "check    Test all sources."
	@echo "install  Install all compilation results."
	@echo "clean    Delete intermediate files."
	@echo "empty    Delete files that can be re-generated. * Use only after a successful install *"
	@echo "dist.lst	Create a list of files to distribute."
	@echo "dist	The distribution packages."

check:
	for i in $(DIRLIST); do cd $$i; $(MAKE) check; cd ..; done

tests:
	for i in $(DIRLIST); do cd $$i; $(MAKE) tests; cd ..; done

test:
	for i in $(DIRLIST); do cd $$i; $(MAKE) test; cd ..; done

all:
	for i in $(DIRLIST); do cd $$i; $(MAKE) all; cd ..; done

depend:
	for i in $(DIRLIST); do cd $$i; $(MAKE) depend; cd ..; done

install:
	for i in $(DIRLIST); do cd $$i; $(MAKE) install; cd ..; done

uninstall:
	for i in $(DIRLIST); do cd $$i; $(MAKE) uninstall; cd ..; done

distclean:
	for i in $(DOCDIRLIST); do cd $$i; $(MAKE) distclean; cd ..; done
	rm -f $(JUNK)

clean:
	for i in $(DOCDIRLIST); do cd $$i; $(MAKE) clean; cd ..; done
	rm -f $(JUNK)

empty:
	for i in $(DOCDIRLIST); do cd $$i; $(MAKE) empty; cd ..; done
	rm -f $(JUNK) $(PRECIOUSJUNK)
	rm -f config.status config.log config.cache

dist.lst:
	echo $(DOCDISTFILES) | tr ' ' '\012' > dist.lst
	for i in $(DOCDIRLIST); do cd $$i; $(MAKE) dist.lst; cd ..; sed -e "s/^/$$i\//" $$i/dist.lst >> dist.lst; done

# ----- Configuration

configure: configure.in
	autoconf

config.status: configure
	./config.status --recheck

Makefile: Makefile.in config.status
	./config.status

# Makefile for the root of the Tm distribution

# The version numbers below reflect release versions for the various
# packages.
TMKERNEL_VERSION = 2.1.0
TMPAS_VERSION = 1.0.3
TMMIRA_VERSION = 1.0.2
TMDEMO_VERSION = 1.0
#CVSDIR = $(HOME)/Cvs
CVSDIR = fs0.das2.cs.vu.nl:/home1/reeuwijk/Cvs

SHELL=/bin/sh
FTPDIR=$(HOME)/website/software/Tm
MAKEFILE=Makefile

# ---- Distribution-related rules ----

DISTBASENAME=tm-$(VERSION)

JUNK += tmkernel_distlist

PACKAGES = $(DISTBASENAME).tar.gz $(DISTBASENAME).zip 

PRECIOUSJUNK += $(PACKAGES)

dist: $(PACKAGES)

SVNURL="https://gforge.cs.vu.nl/svn/templatemanager/kernel/trunk"

tmkernel_distlist: $(MAKEFILE) dist.lst tm tmc libtmc
	cd tmkernel; $(MAKE) test.lst
	sed -e "s/^/$(DISTBASENAME)\//" dist.lst > tmkernel_distlist

$(DISTBASENAME).tar.gz $(DISTBASENAME).zip: tmkernel_distlist
	-mkdir $(DISTBASENAME)
	svn export $(SVNURL) tmkernel-$(TMKERNEL_VERSION) tm/tmkernel
	echo '#define TMKERNEL_VERSION "$(TMKERNEL_VERSION)"' > $(DISTBASENAME)/tm/version.h
	cd $(DISTBASENAME)/libtmc; autoconf
	cd $(DISTBASENAME)/tm; autoconf
	cd $(DISTBASENAME)/tm; tm tm.ds tmcode.ct > tmcode.c
	cd $(DISTBASENAME)/tm; tm tm.ds tmcode.ht > tmcode.h
	cd $(DISTBASENAME)/tmc; autoconf
	cd $(DISTBASENAME); autoconf
	tar cf $(DISTBASENAME).tar `cat tmkernel_distlist`
	gzip --best -f $(DISTBASENAME).tar
	zip -q -9 $(DISTBASENAME).zip `cat tmkernel_distlist`
	rm -rf $(DISTBASENAME)
