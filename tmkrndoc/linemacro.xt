.. Given a enum name 'nm' and a list of names 'l', generate
.. a C enum type with globally unique identifiers.
.. The macro uses a global variable 'tagval' to keep track of the
.. used tag values.
.set tagval 0
.macro gen_tags nm l
/* Enum type '$(nm)'. */
typedef enum en_$(nm) {
.set last ${first ${rev $l}}
.foreach e $l
.if ${eq $e $(last)}
    TAG$e = $(tagval)
.else
    TAG$e = $(tagval),
.endif
.globalset tagval $[$(tagval)+1]
.endforeach
} $(nm);

.endmacro
.call gen_tags expr "ExprConst ExprPlus ExprMinus ExprVar"
