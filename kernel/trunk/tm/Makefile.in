# Tm - an interface code generator.
# Author: C. van Reeuwijk.
#
# All rights reserved.
#
# To configure this Makefile, run 'configure'

VERSION=36

MAKEFILE = Makefile
DEPENDFILE = $(MAKEFILE).d
CC = @CC@
LINKER = $(CC)
prefix = @prefix@
datarootdir = @datarootdir@
datadir = @datadir@
exec_prefix = @exec_prefix@
bindir = @bindir@
libdir = @libdir@
includedir = @includedir@
srcdir = @srcdir@
mandir = @mandir@
LOCALBIN = $(bindir)
LOCALLIB = $(libdir)
LOCALINCLUDE = $(includedir)
LOCALMAN = $(mandir)
LIBS = @LIBS@ ../libtmc/libtmc.a
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
UNINSTALL = rm -f

# -I flags for  .h files
IPATH = -I../libtmc -I$(LOCALINCLUDE)
PROG = tm

CFLAGS        = @CFLAGS@ $(IPATH) -DVERSION=$(VERSION) -g
LDFLAGS	      = $(CFLAGS)
LINTFLAGS = $(IPATH)

TM            = tm

DOC	      = README tm.1

DSFILES       = tm.ds

TMFILES       = tmcode.ct tmcode.ht tmspec.t

TESTFILES     = goodout goodrdir

HDRS	      = refex.h \
		tmdefs.h \
		flag.h \
		error.h \
		tmexpr.h \
		fn.h \
		global.h \
		dsparser.h \
		lex.h \
		tmpath.h \
		misc.h \
		tmstring.h \
		tmtrans.h \
		var.h \
		srchfile.h \
		checkds.h

MAKEFILE      = Makefile

# Source files that are not generated by any tool
NORMALSRCS = \
		checkds.c \
		refex.c \
		tm.c \
		flag.c \
		error.c \
		tmexpr.c \
		fn.c \
		global.c \
		dsparser.c \
		lex.c \
		misc.c \
		tmstring.c \
		tmtrans.c \
		var.c \
		srchfile.c

GENSRCS = tmcode.c tmpath.c

DEPENDSRC = $(NORMALSRCS) $(GENSRCS)

NORMALOBJS = $(NORMALSRCS:.c=.o)
GENOBJS = $(GENSRCS:.c=.o)
OBJS = $(GENOBJS) $(NORMALOBJS)

SRCS = $(NORMALSRCS) $(GENSRCS)
LINTSRCS = $(SRCS)

TMOUTPUT = tmcode.c tmcode.h

GENFILES = $(TMOUTPUT) tmpath.c version.h

JUNK         = y.output testerr testout testrdir index.sed \
		dsneed.t makelog testscr tm.prof log tags dist.lst \
		config.log
PRECIOUSJUNK =

FOREIGNFILES = tmtos.prj makefile.tc config.htc makefile.tos config.hts

# Files for configuration
CONFIGUREFILES = configure config.hin Makefile.in configure.in

# Note: TMOUTPUT must be placed after DSFILES and TMFILES
#       to ensure that they are more recent than them. Otherwise
#       tm would be needed to make tm...
DISTFILES = $(DSFILES) $(TMFILES) $(NORMALSRCS) $(HDRS) \
    $(TMOUTPUT) $(TESTFILES) $(DOC) $(FOREIGNFILES) $(CONFIGUREFILES)


all: $(PROG)

help :
	@echo " Possible make targets:"
	@echo "all		Create local running programs."
	@echo "check		Run tests."
	@echo "install		Install relevant files."
	@echo "clean		Free disk space."
	@echo "distfiles	List distribution files."
	@echo "depend		Update dependencies in $(MAKEFILE)."
	@echo "doc		Format documentation."
	@echo "man		Format manual pages."

$(PROG): $(OBJS)
	$(LINKER) $(LDFLAGS) $(OBJS) $(LIBS) -o $(PROG)

install: $(PROG) tm.1
	-$(INSTALL) -d $(LOCALBIN)
	-$(INSTALL) -d $(LOCALMAN)/man1
	$(INSTALL) $(PROG) $(LOCALBIN)/$(PROG)
	$(INSTALL) tm.1 $(LOCALMAN)/man1//tm.1

uninstall:
	$(UNINSTALL) $(LOCALBIN)/$(PROG)
	$(UNINSTALL) $(LOCALMAN)/man1//tm.1

distclean:
	rm -f $(OBJS) $(JUNK) $(PROG)
	rm -f config.status config.cache config.h
	cd testsuite && make distclean

empty:
	rm -f $(OBJS) $(JUNK) $(PROG)
	rm -f config.h
	rm -f $(PRECIOUSJUNK)
	cd testsuite && make empty

clean:
	rm -f $(OBJS) $(GENFILES) $(JUNK)
	cd testsuite && make clean

tmcode.h: tmcode.ht tm.ds tmspec.t
	tm tm.ds tmcode.ht > tmcode.h

tmcode.c: tmcode.ct tm.ds tmspec.t
	tm tm.ds tmcode.ct > tmcode.c

tmpath.c: $(MAKEFILE)
	echo 'char libpath[]="$(LOCALLIB)";' > tmpath.c

tags: $(SRCS) $(HDRS)
	ctags $(SRCS) $(HDRS)

version.h: ../version.h
	cp ../version.h version.h

check: 
	cd testsuite && make check

tests:
	cd testsuite && make tests

test:
	cd testsuite && make test

distfiles: $(MAKEFILE)
	@echo $(DISTFILES) | tr ' ' '\012'

dist.lst: $(MAKEFILE)
	echo $(DISTFILES) | tr ' ' '\012' > dist.lst

depend: $(DEPENDFILE)

# TODO: this only works if the compiler knows the -MM flag, which
# is realistically only the GNU compiler. There is no nice solution:
# some other compilers may have a different flag for this, or otherwise
# it may be possible to use the GNU compiler just to compute the
# dependencies.
$(DEPENDFILE): $(DEPENDSRC) $(GENFILES)
	$(CC) -MM $(IPATH) $(DEPENDSRC) > $(DEPENDFILE)

stats: empty
	wc -l *.c *.h

genstats: $(GENSRCS) $(GENHDRS)
	wc -l $(GENSRCS) $(GENHDRS)
 
# Configure-related rules.

configure: configure.in
	autoconf

config.status: configure
	./config.status --recheck

Makefile config.h: Makefile.in config.status config.hin
	./config.status

JUNK += config.log config.cache
PRECIOUSJUNK += config.status configure

-include $(DEPENDFILE)

# --- lint ---

#lint: $(DEPENDSRC) $(HDRS) gcc-lint.h co-gnu.lnt fnprop.lnt suppress.lnt
#	lint co-gnu fnprop suppress $(LINTFLAGS) $(DEPENDSRC) > lint

lint: $(LINTSRCS) $(HDRS) splint.flags
	splint $(LINTFLAGS) -f splint.flags $(LINTSRCS) > lint

JUNK += lint
DISTFILES += splint.flags

###

checkds.o: checkds.c config.h tmdefs.h error.h tmcode.h misc.h \
 checkds.h
refex.o: refex.c config.h tmdefs.h refex.h
tm.o: tm.c config.h tmdefs.h flag.h tmcode.h tmstring.h error.h fn.h \
 lex.h dsparser.h misc.h tmtrans.h var.h global.h tmpath.h srchfile.h \
 version.h checkds.h
flag.o: flag.c config.h tmdefs.h flag.h
error.o: error.c config.h tmdefs.h tmcode.h tmstring.h global.h \
 error.h
tmexpr.o: tmexpr.c config.h tmdefs.h tmcode.h tmstring.h error.h \
 tmexpr.h global.h misc.h
fn.o: fn.c config.h tmdefs.h refex.h tmcode.h tmstring.h error.h fn.h \
 global.h tmtrans.h misc.h var.h srchfile.h
global.o: global.c config.h tmdefs.h tmcode.h tmstring.h global.h
dsparser.o: dsparser.c config.h tmdefs.h tmcode.h tmstring.h error.h \
 global.h lex.h misc.h dsparser.h checkds.h srchfile.h
lex.o: lex.c config.h tmdefs.h tmcode.h tmstring.h error.h global.h \
 lex.h misc.h
misc.o: misc.c config.h tmdefs.h tmcode.h misc.h error.h
tmstring.o: tmstring.c config.h tmdefs.h tmcode.h tmstring.h misc.h \
 error.h
tmtrans.o: tmtrans.c config.h tmdefs.h tmcode.h tmstring.h fn.h \
 tmexpr.h error.h global.h tmpath.h misc.h tmtrans.h var.h srchfile.h \
 checkds.h
var.o: var.c config.h tmdefs.h tmcode.h tmstring.h misc.h error.h \
 var.h global.h refex.h
srchfile.o: srchfile.c config.h tmdefs.h tmcode.h srchfile.h
tmcode.o: tmcode.c config.h tmdefs.h tmcode.h tmstring.h global.h \
 misc.h
tmpath.o: tmpath.c
