Welcome to the Tm kernel distribution.

General
-------

This directory contains three directories that form the kernel of the
Template Manager ('Tm'). 

Tm is covered by the GNU General Public License. Briefly, this means
that you are free to use the program and its sources, but you are not
allowed to ask money for the program or the sources.

Tm templates and libraries are covered by the GNU Library Public
License. Briefly, this means that you can use code generated with Tm,
code generated from standard Tm templates, and Tm libraries linked to
your program, even in commercial programs.

Before you install the program you should read at least this file, and
the LICENCE file. If you want to know what has changed in the most
recent distribution, see the CHANGES file.

** Please read this file before installing the program. **

To be able to compile Tm, you must first have compiled and installed the
Tm C support library, as found in the directory 'libtmc', and Tm itself, as
found in the directory 'tm'. You can then install the templates. This
is done by the Makefile supplied here.

Tm requires an ANSI C compiler.

Tm C templates has been compiled and tested on the following systems:
 - Debian Linux with the GNU C compiler
 - MacOS X with Apple's developer tools.

Older versions have been compiled on lots of other UNIX systems, and
on SunOS, Atari, and Windows, but this has not been tested with recent
versions.


Compiling and installing
------------------------

Before you can compile Tm, you must configure the Makefiles and the
configuration header files.  You do this by simply typing

    ./configure

at the command prompt. This will set reasonable defaults for the
compilation.  See the section "Changing compilation options" below if
you want the change the installation directory or the command to invoke
the C compiler.

After you have run the configuration script, you can make all compilation
targets with

    make all

run some tests on the results with

    make check

and install the software with

    make install

To delete the intermediate files generated by the complation process,
use

    make clean

or use

    make empty

to delete all files that can be generated from other files.

***WARNING***

To compile Tm you need Tm! In the distributed version this is solved
by including the code that is generated by Tm in the distribution,
but before you do 'make clean' make sure that you have succesfully
compiled and installed libtmc, tm and tmc.

There are other targets in the Makefile. Do

    make help

to get an overview of them.


Changing compilation options
----------------------------

The configure script will determine on what kind of system you are,
and will adapt a number of parameters accordingly. If the configure
script can find the GNU C compiler (gcc), it will use that, else it
will use the standard C compiler on your system (cc). To over-ride
this behavior, you can give configure an value for the compiler
variable `CC' by setting it in the environment.  For example (assuming
you use the csh(1)):

    setenv CC cc -Aa
    ./configure

If 'setenv' does not work, see the section "Setting environment variables"
below. The environment variable needs only be visible at the moment
you run configure.

The program will be installed in <prefix>/bin. By default <prefix> is
determined by the place the GNU compiler is found, or if that cannot
be found it is '/usr/local'.  To change the prefix, you can give
configure the option '--prefix=<path>'. For example, with

    ./configure --prefix=/usr/blob

Tm will be installed in /usr/blob/bin.


Documentation
-------------

This package no longer contains a manual; that is in a separate package
'kerneldoc'.


Setting environment variables
-----------------------------

In these installation instructions, environment variables are set with
the command `setenv'. For example:

  setenv CC cc -Aa

This only works in the `csh' shell and variants (for example `tcsh').
For Bourne-like shells setting environment variables is done like this:

  export CC="cc -Aa"

