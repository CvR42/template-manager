#!/bin/sh
#
# Driver script for the ruler tests.
#
# See the function 'showusage' for the usage of this command.
VERSION=1.0
# Paths
#
# Places of executables

# Clear flags to the various phases
VERBOSE=
FORCEFLAG=
SILENT=0
PERSIST=0
FAIL=0

# lists of files
TESTS=

function showversion()
{
    echo "$0 version $VERSION";
}

function showusage()
{
    showversion
    cat << EOF
Usage: $0 [options] <file> .. <file>

-f		For 'gen' tests, force the .v file to be equal to the .tv file
-s		Don't report the execution of each test, as is normally done.
-v		Show the details of execution of each test.
-k		Keep running the remaining tests, even if one of them failed.
--version	Show the version number.
--help		Show a help text.
EOF
}

while [ $# -gt 0 ]; do
    case "$1" in

	--version)
	    showversion; exit 0 ;;

	-v)
	    VERBOSE=-v; shift ;;

	-f)
	    FORCEFLAG=-f; shift ;;

	-k)
	    PERSIST=1; shift ;;

	-s)
	    SILENT=1; shift ;;

	-h|--help)
	    showusage; exit 0 ;;

	-*)
	    echo "unknown option '$1'"
	    showusage
	    exit 1
	    ;;

	*t)
	    TESTS="$TESTS $1"
	    shift
	    ;;

	*)
	    echo "$0: Don't know what to do with file '$1'"
	    shift
	    FAIL=1
	    ;;
    esac
done

if [ ${#TESTS} -eq 0  ]; then
    TESTS="`ls *.rl`"
fi
if [ $FAIL = 1 ]; then
    exit 2
fi

RESALL=0
#
# Go run the tests
# 
for f in $TESTS; do
    if [ $SILENT = 0 ]; then
	echo "test '$f'"
    fi
    case "$f" in

	err*)
	    ./runerr $VERBOSE $f
	    RES=$?
	    ;;
	dserr*)
	    ./rundserr $VERBOSE $f
	    RES=$?
	    ;;

	gen*)
	    ./rungen $FORCEFLAG $VERBOSE $f
	    RES=$?
	    ;;

	*)
	    echo "$0: Don't know what to do for test file '$f'"
	    RES=2
    esac
    if [ $PERSIST = 1 ]; then
	if [ $RES ">" $RESALL ]; then
	    RESALL=$RES
	fi
    else
	if [ $RES != 0 ]; then
	    exit $RES
	fi
    fi
done
exit $RESALL
