|| Tm - an interface code generator.
|| Author: C. van Reeuwijk.
||
|| All rights reserved.

|| File: test.ds
|| Author: CvR
||
|| Datastructure file for exhausive test of tm.

toplevel ::=
    Top la:[sublevel] lb:[[sublevel]] |
    TopTuple tup:subtuple |
    TopEnum e:subenum |
    TopEmptyTuple e:emptytuple |
    TopNone;

emptytuple == ();

label = { labelval:int };

subtuple = label + { tl:[thing], tn:int };

sublevel ::= label +
    SubNamed n:int |
    SubNamedlist thinglist:[thing] ;

subenum ::= EA | EB | EC;

thing ::= Thing n:int;

expr =
    exprConst: { n:int } |
    exprPlus: { a:expr, b:expr }
    ;

smt = { line:int } +
	SmtAssign: { lhs:expr, rhs:expr } |
	SmtIf: { cond:expr, thencode:[smt], elsecode:[smt] } ;
