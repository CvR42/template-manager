.. Tm - an interface code generator.
.. Copyright (C) 1991, Delft University of Technology and C. van Reeuwijk.
..
.. This software is distributed under the terms of the GNU General Public
.. Licence as published by the Free Software Foundation. See the file 'LICENCE'
.. in the root directory of this distribution for details.
..
.. File: testmass.pt
.. Test of tm pascal library
.insert testconf.t
.. Note: in the installed version of the templates this is
.. not necessary.
.insert pasneed.t
program tmtestprog( input, output );

type
.include pastype.pt

var
    root: plotlist;
    vcopy: plotlist;
    readback: plotlist;
    err: boolean;
.include pasgvar.pt
.include pasvar.pt

.include paslib.pt

{ Some external C functions that are necessary }

procedure exit(i: integer);
external;

.include pascode.pt

begin
    writeln ('|| TMTEST');
    writeln( '|| Initalizing.' );
    Init$(basename);
    writeln( '|| Opening input file.');  
    writeln( '|| Reading Miranda data structure. '); 
    tmgetc( input );
    err := Readplotlist( input, output, root );
    if not err then begin
	writeln( '|| Copying data structure.' );
	vcopy := Copyplotlist( root );
	writeln( '|| Comparing.' );
	if Cmpplotlist( vcopy, root ) <> 0 then begin
	    writeln( '|| Strange, copied datastructure is not equal.' );
	    err := true
	end;
    end;
    if not err then begin
	writeln( '|| Disposing data structure.' );
	Rfreplotlist( root );
	writeln( '|| Generating Miranda.' );
	Writeplotlist( output, vcopy );
	writeln( '|| Statistics.' );
	Rfreplotlist( vcopy );
	Rfreplotlist( readback );
	Stat$(basename)( output );
	writeln( '|| Done.' );
    end;
    if err then
	exit( 1 )
    else
	exit( 0 );
end.
